name: Build & Push

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  APP_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/olha-mensagem-app
  NGINX_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/olha-mensagem-nginx

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0'
      - name: Run tests
        run: go test -v ./...
  
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: app
            dockerfile: Dockerfile
            image_name_env: APP_IMAGE_NAME
          - image: nginx
            dockerfile: Dockerfile.nginx
            image_name_env: NGINX_IMAGE_NAME
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image name
        id: set-image
        run: |
          if [ "${{ matrix.image_name_env }}" = "APP_IMAGE_NAME" ]; then
            echo "IMAGE_NAME=${{ env.APP_IMAGE_NAME }}" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_NAME=${{ env.NGINX_IMAGE_NAME }}" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.set-image.outputs.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short,prefix=sha-

      - name: Build (no push) - ${{ matrix.image }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=${{ matrix.image }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image }}

  push:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: app
            dockerfile: Dockerfile
            image_name_env: APP_IMAGE_NAME
          - image: nginx
            dockerfile: Dockerfile.nginx
            image_name_env: NGINX_IMAGE_NAME
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set image name
        id: set-image
        run: |
          if [ "${{ matrix.image_name_env }}" = "APP_IMAGE_NAME" ]; then
            echo "IMAGE_NAME=${{ env.APP_IMAGE_NAME }}" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_NAME=${{ env.NGINX_IMAGE_NAME }}" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.set-image.outputs.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short,prefix=sha-

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push multi-arch - ${{ matrix.image }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.image }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image }}

      - name: Summary - ${{ matrix.image }}
        run: |
          echo "Pushed ${{ matrix.image }} tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n'